import java.util.ArrayList;
import java.util.Scanner;

public class BankApplication {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		sc.useDelimiter(System.lineSeparator()); 
		Bank bank = new Bank();
		
		int choice = 0;
		
		while (choice != 9) {
			printMenu();
			choice = sc.nextInt();
			switch(choice) {
			case 1: 
				
				break;
			case 2:
				System.out.print("namn: ");
				String namePart = sc.next();
				ArrayList<Customer> found = bank.findByPartofName(namePart);
				if(found.size() == 0) {
					System.out.println("Inga konton kunde hittas!");
					break;
				}
				for(Customer c: found) {
					System.out.println(c);
				}
				break;
			case 3:
				System.out.print("konto: ");
				int depositAccountNr = sc.nextInt();
				System.out.print("belopp: ");
				double depositAmount = sc.nextDouble();
				BankAccount depositAccount = bank.findByNumber(depositAccountNr);
				if (depositAccount != null) { // Om kontot kunde hittas
					depositAccount.deposit(depositAmount);
					System.out.println(depositAccount);
				} else { // Om kontot inte kunde hittas
					System.out.println("Kontot kunde inte hittas! "
							+ "Kontrollera ditt inmatade kontonummer.");
				}
				break;
			case 4:
				/** ----------- Inmatning ----------- */
				System.out.print("från konto: ");
				int withdrawAccountNr = sc.nextInt();
				System.out.print("belopp: ");
				double withdrawAmount = sc.nextDouble();
				/** --------------------------------- */
				
				BankAccount withdrawAccount = bank.findByNumber(withdrawAccountNr);
				if (withdrawAccount == null) { // Om kontot inte kunde hittas, skriv fel och break
					System.out.println("Kontot kunde inte hittas! "
							+ "Kontrollera ditt inmatade kontonummer.");
				} else if (withdrawAmount > withdrawAccount.getAmount()) {
					System.out.println("Uttaget misslyckades, endast "
							+ withdrawAccount.getAmount() + " på kontot!");
				} else {
					withdrawAccount.withdraw(withdrawAmount);
					System.out.println(withdrawAccount);
				}
				break;
			case 5:
				/** ----------- Inmatning ----------- */
				System.out.print("från konto: ");
				int fromAccountNr = sc.nextInt();
				System.out.print("från konto: ");
				int toAccountNr = sc.nextInt();
				System.out.print("belopp: ");
				double transferAmount = sc.nextDouble();
				/** --------------------------------- */
				
				BankAccount fromAccount = bank.findByNumber(fromAccountNr);
				BankAccount toAccount = bank.findByNumber(toAccountNr);
				if (fromAccount == null) { // Om kontot inte kunde hittas, skriv fel och break
					System.out.println("Från-kontot kunde inte hittas! "
							+ "Kontrollera ditt inmatade kontonummer.");
				} else if (toAccount == null) {
					System.out.println("Mottagarkontot kunde inte hittas! "
							+ "Kontrollera ditt inmatade kontonummer.");
				} else if (withdrawAmount > withdrawAccount.getAmount()) {
					System.out.println("Uttaget misslyckades, endast "
							+ withdrawAccount.getAmount() + " på kontot!");
				} else {
					withdrawAccount.withdraw(withdrawAmount);
					System.out.println(withdrawAccount);
				}
				break;
			case 6:
				System.out.print("namn: ");
				String name = sc.next();
				System.out.print("id: ");
				long id = sc.nextLong();
				int accountNumber = bank.addAccount(name, id);
				System.out.println("konto skapat:" + accountNumber);
				break;
			case 7:
				
				break;
			case 8:
				System.out.println(bank.getAllAccounts());
				break;
			case 9:
				break;
			}
		}
		
	}
	
	private static void printMenu() {
		System.out.print("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n"
				+ "1. Hitta konto utifrån innehavare\r\n"
				+ "2. Sök kontoinnehavare utifrån (del av) namn\r\n"
				+ "3. Sätt in\r\n"
				+ "4. Ta ut\r\n"
				+ "5. Överföring\r\n"
				+ "6. Skapa konto\r\n"
				+ "7. Ta bort konto\r\n"
				+ "8. Skriv ut konton\r\n"
				+ "9. Avsluta\r\n"
				+ "val: ");
	}

}
